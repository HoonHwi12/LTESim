#pragma once

// @generated by tools/codegen/gen.py from Function.h

#include <ATen/Context.h>
#include <ATen/DeviceGuard.h>
#include <ATen/TensorUtils.h>
#include <ATen/TracerMode.h>
#include <ATen/core/Generator.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <c10/util/Optional.h>



#include <ATen/ops/_csr_to_block_csr_ops.h>

namespace at {


// aten::_csr_to_block_csr(Tensor self, int[2] block_size) -> Tensor
TORCH_API inline at::Tensor _csr_to_block_csr(const at::Tensor & self, at::IntArrayRef block_size) {
    return at::_ops::_csr_to_block_csr::call(self, block_size);
}

}
